-

  class TaskManager {

    static counterForComponentID_Generating = 0;

    static generateComponentID() {
      TaskManager.counterForComponentID_Generating++;
      return `TASK_MANAGER-${ TaskManager.counterForComponentID_Generating }`;
    }

  }


mixin TaskManager(properties, statesSimulations)

  -

    properties = properties ?? {}
    statesSimulations = statesSimulations ?? {}

    const {
      targetTask = null,
      activationGuidance
    } = properties

    const {
      editingMode = false
    } = statesSimulations

    const COMPONENT_ID = TaskManager.generateComponentID();
    const HEADING_ID = `${ COMPONENT_ID }-Heading`;

    const viewingMode = !editingMode;


  .TaskManager&attributes(attributes)

    .TaskManager-Heading(
      id= HEADING_ID
    ) 課題詳細

    if !targetTask && activationGuidance

      +AttentionBox--YDF({
        decoration: AttentionBox__YDF.DecorativeVariations.guidance,
        hasPrependedSVG_Icon: true
      }).TaskManager-Guidance= activationGuidance


    .TaskManager-ActionBar

      if viewingMode

        +Button--YDF({
          geometry: Button__YDF.GeometricVariations.small,
          disabled: !targetTask
        })
          +Pencil__Filled--YDF_Icon.Button--YDF-SVG_Icon
          span.Button--YDF-Label 編集

      +Button--YDF({
        geometry: Button__YDF.GeometricVariations.small,
        disabled: !targetTask
      })
        +TrashCan__Filled--YDF_Icon.Button--YDF-SVG_Icon
        span.Button--YDF-Label 削除


    if viewingMode

      dl.TaskManager-Metadata

        dt 見出し
        dd= targetTask ? targetTask.Title : ""

        dt 記述
        dd= targetTask ? targetTask.Description : ""

    else

      form.TaskManager-Form(
        aria-labelledby= HEADING_ID
      )

        +TextBox--YDF({
          label: "見出し",
          guidance: "〇〇～〇〇文字を入力して下さい。",
          value: targetTask ? targetTask.Title : ""
        }).TaskManager-Control

        +TextBox--YDF({
          label: "記述",
          guidance: "〇〇～〇〇文字を入力して下さい。",
          multiline: true,
          value: targetTask ? targetTask.Description : ""
        }).TaskManager-Control

        .TaskManager-ActionBar

          +Button--YDF({
            disabled: !targetTask
          })
            +MultiplicationSign--YDF_Icon.Button--YDF-SVG_Icon
            span.Button--YDF-Label 編集を止める

          +Button--YDF({
            HTML_Type: Button__YDF.HTML_Types.inputSubmit,
            decoration: Button__YDF.DecorativeVariations.accented,
            label: "保存",
            disabled: !targetTask
          })
