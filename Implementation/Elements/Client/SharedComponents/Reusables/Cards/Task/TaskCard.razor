@using FrontEndFramework.Components.Badge
@using FrontEndFramework.SVG_Icons.Checkbox
@using FrontEndFramework.SVG_Icons.Calendar
@using FrontEndFramework.Helpers


<DynamicTag
  name=@rootElementTag
  attributes=@(
    new Dictionary<string, object> {
      { "class", $"TaskCard { spaceSeparatedAdditionalCSS_Classes }" },
      { "tabindex", "0" },
      { "onclick", this.onClickOutermostElement }
    }
  )
>

  <span
    class="TaskCard-Checkbox"
    role="checkbox"
    tabindex="0"
    aria-checked=@targetTask.isComplete
  >

    @if (targetTask.isComplete)
    {
      <CheckboxIcon__Checked spaceSeparatedAdditionalCSS_Classes="TaskCard-Checkbox-Icon" />
    }
    else
    {
      <CheckboxIcon__Unchecked spaceSeparatedAdditionalCSS_Classes="TaskCard-Checkbox-Icon" />
    }

  </span>

  <div class="TaskCard-Title">@targetTask.title</div>

  @* TODO 【 次のプールリクエスト 】 カテゴリーベッジに置き換え *@
      @* decoration="@Client.SharedComponents.Reusables.Badge.Badge.DecorativeVariations.flatGradient" *@
  <div class="TaskCard-BadgesFlow">
    <Badge
      value="一時的"
      decoration="@FrontEndFramework.Components.Badge.Badge.StandardDecorativeVariations.veryCatchyBright"
    >
      <PrependedSVG_Icon>
        <CalendarIcon__Time spaceSeparatedAdditionalCSS_Classes="Badge--YDF-SVG_Icon" />
      </PrependedSVG_Icon>
    </Badge>
  </div>
  
  @if (!String.IsNullOrEmpty(targetTask.description))
  {
    <div class="TaskCard-Description"> @targetTask.description </div>
  }

</DynamicTag>
