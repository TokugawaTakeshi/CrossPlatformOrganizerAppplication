@using Task = CommonSolution.Entities.Task
@using Client.SharedState
@using Client.SharedComponents.Cards.Task.LoadingPlaceholder
@using Client.SharedComponents.Cards.Task
@using FrontEndFramework.Components.AttentionBox
@using FrontEndFramework.Components.Controls.Buttons.Plain


<div class="TasksManager @spaceSeparatedAdditionalCSS_Classes">
  
  @if (TasksSharedState.isTasksRetrievingInProgressOrNotStartedYet)
  {
    <div class="TasksManager-CardsFlow">
      @for (uint cardNumber = 0; cardNumber < 12; cardNumber++)
      {
        <TaskCardLoadingPlaceholder />  
      }
    </div>  
  }
  
  else if (TasksSharedState.hasTasksSelectionRetrievingErrorOccurred)
  {
    <AttentionBox
      decoration=@AttentionBox.StandardDecorativeVariations.error
      hasPrependedSVG_Icon
      rootElementModifierCSS_Class="TasksManager-AttentionBox"
    >

      <p>情報取得中不具合が発生しました。</p>
      
      <Button
        label="再試験"
        onClick=@(TasksSharedState.retrieveTasks)
        spaceSeparatedAdditionalCSS_Classes="AttentionBox--YDF-CenteredButton"
      />
      
    </AttentionBox>
  }

  else
  {
    <ul class="TasksManager-CardsFlow">
      @foreach (Task task in TasksSharedState.tasks)
      {
        <TaskCard 
          targetTask=@task
          rootElementTag="li"
          onClick="onSelectTask"
        />
      }
    </ul>
  }
  
</div>