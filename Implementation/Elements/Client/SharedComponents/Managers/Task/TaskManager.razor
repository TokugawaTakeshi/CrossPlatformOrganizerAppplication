@using CommonSolution.Entities
@using Task = CommonSolution.Entities.Task

@using FrontEndFramework.Components.AttentionBox
@using FrontEndFramework.Components.Controls.Buttons.Plain
@using FrontEndFramework.Components.Controls.TextBox

@using FrontEndFramework.SVG_Icons.FloppyDisk
@using FrontEndFramework.SVG_Icons.Pencil
@using FrontEndFramework.SVG_Icons.TrashCan
@using FrontEndFramework.SVG_Icons.MultiplicationSign


<div class="TaskManager @rootElementModifierCSS_Class">
  
  <div 
    class="TaskManager-Heading"
    id=@HEADING_ID
  >
    課題詳細
  </div>
  
  @if (targetTask is null && !String.IsNullOrEmpty(activationGuidance))
  {
    <AttentionBox
      rootElementModifierCSS_Class="TaskManager-Guidance"
      decoration=@AttentionBox.StandardDecorativeVariations.guidance
      hasPrependedSVG_Icon
    >
      <p>@activationGuidance</p>
    </AttentionBox>
  }

  @* ━━━ 上部アクションバー ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ *@
  <div class="TaskManager-ActionBar">
  
    @if (isViewingMode)
    {
      <Button
        disabled=@(targetTask is null)
        label="編集"
        onClick=@beginTaskEditing
      >
        <PrependedSVG_Icon>
          <PencilIcon__Filled rootElementModifierCSS_Class="Button--YDF-SVG_Icon" />  
        </PrependedSVG_Icon>
      </Button>
    }
    
    <Button
      disabled=@(targetTask is null)
      label="削除"
      onClick=@displayTaskDeletingConfirmationDialog
    >
      <PrependedSVG_Icon>
        <TrashCan__Filled rootElementModifierCSS_Class="Button--YDF-SVG_Icon" />  
      </PrependedSVG_Icon>
    </Button>

    @if (isEditingMode)
    {
      <Button
        label="編集中断"
        onClick=@utilizeTaskEditing
      >
        <PrependedSVG_Icon>
          <MultiplicationSignIcon rootElementModifierCSS_Class="Button--YDF-SVG_Icon" />  
        </PrependedSVG_Icon>
      </Button> 
    }
  
  </div>
  
  
  @* ━━━ 閲覧モード ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ *@
  @if (isViewingMode)
  {
  
    <dl class="TaskManager-Metadata">
    
      <dt>見出し</dt>
      <dd>@(targetTask?.title ?? "" )</dd>
    
      <dt>記述</dt>
      <dd>@(targetTask?.description ?? "")</dd>
    
    </dl>
    
  }

  else
  {
   
    @* ━━━ 編集モード ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ *@
    <form
      class="TaskManager-Form"
      aria-labelledby=@HEADING_ID
    >
        
      <TextBox
        label="見出し"
        guidance=@(
          $"見出しを**{ Task.Title.MINIMAL_CHARACTERS_COUNT }~{ Task.Title.MAXIMAL_CHARACTERS_COUNT }文字内**" +
              "入力して下さい。"
        )
        payload=@taskControlsPayload.title
        @ref=@titleTextBox
        spaceSeparatedAdditionalCSS_Classes="TaskManager-Control"
      />
      
      <TextBox
        label="記述"
        guidance=@($"詳細をを**{ Task.Description.MINIMAL_CHARACTERS_COUNT }文字以上**入力して下さい。")
        multiline
        payload=@taskControlsPayload.description
        @ref=@descriptionTextBox
        spaceSeparatedAdditionalCSS_Classes="TaskManager-Control"
      />
      
      <div class="TaskManager-ActionBar">
        
        <Button
          label="保存"
          HTML_Type=@Button.HTML_Types.inputSubmit
          onClick=@onClickTaskDataSavingButton
          decoration=@Button.StandardDecorativeVariations.accented.ToString()
        >
          <PrependedSVG_Icon>
            <FloppyDiskIcon rootElementModifierCSS_Class="Button--YDF-SVG_Icon" />
          </PrependedSVG_Icon>
        </Button>
        
        <Button
          label="編集を止める"
          onClick=@utilizeTaskEditing
        >
          <PrependedSVG_Icon>
            <MultiplicationSignIcon rootElementModifierCSS_Class="Button--YDF-SVG_Icon" />  
          </PrependedSVG_Icon>
        </Button>
        
      </div>
      
    </form>
    
  }
  
</div>