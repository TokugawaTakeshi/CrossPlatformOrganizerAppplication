@using FrontEndFramework.Components.AttentionBox
@using FrontEndFramework.Components.Controls.Buttons.Plain
@using FrontEndFramework.Components.Controls.TextBox
@using FrontEndFramework.SVG_Icons.Pencil
@using FrontEndFramework.SVG_Icons.TrashCan
@using FrontEndFramework.SVG_Icons.MultiplicationSign


<div class="TaskManager @spaceSeparatedAdditionalCSS_Classes">
  
  <div 
    class="TaskManager-Heading"
    id=@HEADING_ID
  >
    課題詳細
  </div>
  
  @if (targetTask is null && !String.IsNullOrEmpty(activationGuidance))
  {
    <AttentionBox
      spaceSeparatedAdditionalCSS_Classes="TaskManager-Guidance"
      decoration=@AttentionBox.StandardDecorativeVariations.guidance
      hasPrependedSVG_Icon
    >
      <p>@activationGuidance</p>
    </AttentionBox>
  }

  
  <div class="TaskManager-ActionBar">
  
    @if (isViewingMode)
    {
      <Button
        disabled=@(targetTask is null)
        label="編集"
        onClick="beginTaskEditing"
      >
        <PrependedSVG_Icon>
          <PencilIcon__Filled spaceSeparatedAdditionalCSS_Classes="Button--YDF-SVG_Icon" />  
        </PrependedSVG_Icon>
      </Button>
    }
    
    <Button
      disabled=@(targetTask is null)
      label="削除"
      onClick="displayTaskDeletingConfirmationDialog"
    >
      <PrependedSVG_Icon>
        <TrashCan__Filled spaceSeparatedAdditionalCSS_Classes="Button--YDF-SVG_Icon" />  
      </PrependedSVG_Icon>
    </Button>

  </div>
  
  
  @if (isViewingMode)
  {
  
    <dl class="TaskManager-Metadata">
    
      <dt>見出し</dt>
      <dd>@(targetTask?.Title ?? "" )</dd>
    
      @if (targetTask?.Description != null)
      {
        <dt>記述</dt>
        <dd>@targetTask.Description</dd>      
      }
    
    </dl>
    
  }

  else
  {
    <form
      class="TaskManager-Form"
      aria-labelledby=@HEADING_ID
    >
        
      <TextBox
        label="見出し"
        guidance="〇〇～〇〇文字を入力して下さい。"
        spaceSeparatedAdditionalCSS_Classes="TaskManager-Control"
        payload=taskTitlePayload
      />
      
      <TextBox
        label="記述"
        guidance="〇〇～〇〇文字を入力して下さい。"
        multiline
        spaceSeparatedAdditionalCSS_Classes="TaskManager-Control"
        payload=taskDescriptionPayload
      />
      
      <div class="TaskManager-ActionBar">
        
        <Button
          label="保存"
          HTML_Type=@Button.HTML_Types.inputSubmit
          decoration=@Button.StandardDecorativeVariations.accented.ToString()
          onClick=@updateTask
        />
        
        <Button
          label="編集を止める"
          onClick=@utilizeTaskEditing
        >
          <PrependedSVG_Icon>
            <MultiplicationSignIcon spaceSeparatedAdditionalCSS_Classes="Button--YDF-SVG_Icon" />  
          </PrependedSVG_Icon>
        </Button>
        
      </div>
      
    </form>  
  }
  
</div>