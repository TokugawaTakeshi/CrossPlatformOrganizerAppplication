@using Person = CommonSolution.Entities.Person

@using Client.Components.SharedReusable.Cards.Person
@using Client.Components.SharedReusable.Cards.Person.LoadingPlaceholder
@using FrontEndFramework.Components.AttentionBox
@using FrontEndFramework.Components.Controls.Buttons.Plain

@using Client.SharedState


<div class="PeopleManager @spaceSeparatedAdditionalCSS_Classes">

  @if (PeopleSharedState.isPeopleRetrievingInProgressOrNotStartedYet)
  {
    <div class="PeopleManager-CardsFlow">
      @for (uint cardNumber = 0; cardNumber < 12; cardNumber++)
      {
        <PersonCardLoadingPlaceholder/>
      }
    </div>  
  }
  
  else if (PeopleSharedState.hasPeopleSelectionRetrievingErrorOccurred)
  {
    <AttentionBox
      decoration=@AttentionBox.StandardDecorativeVariations.error
      hasPrependedSVG_Icon
      spaceSeparatedAdditionalCSS_Classes="TasksManager-AttentionBox"
    >

      <p>情報取得中不具合が発生しました。</p>
      
      <Button
        label="再試験"
        onClick=@(PeopleSharedState.retrievePeople)
        spaceSeparatedAdditionalCSS_Classes="AttentionBox--YDF-CenteredButton"
      />
      
    </AttentionBox>
  }
  
  else
    {
      <ul class="PeopleManager-CardsFlow">
        @foreach (Person person in PeopleSharedState.people)
        {
          <PersonCard 
            targetPerson=@person
            rootElementTag="li"
            onClick=@onSelectPerson
          />
        }
      </ul>
    }
  
</div>
